@Library('jenkins-pipeline-shared-libraries')_

import org.kie.jenkins.MavenCommand

helper = null

pipeline {
    agent {
        label 'kie-rhel7 && kie-mem16g'
    }
    tools {
        maven 'kie-maven-3.6.2'
        jdk 'kie-jdk11'
    }
    options {
        timeout(time: 360, unit: 'MINUTES')
    }
    environment {
        // Some generated env is also defined into .jenkins/dsl/jobs.groovy file

        KOGITO_CI_EMAIL_TO = credentials("${JENKINS_EMAIL_CREDS_ID}")
        SONARCLOUD_TOKEN = credentials('SONARCLOUD_TOKEN')
        MAVEN_OPTS = '-Xms1024m -Xmx4g'
    }
    stages {
        stage('Initialize') {
            steps {
                script {
                    helper = load '.jenkins/scripts/helper.groovy'

                    helper.checkoutRepo(kogitoRuntimesRepo, params.GIT_AUTHOR, params.BUILD_BRANCH_NAME)
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    helper.runUnitTests(getMavenCommand(kogitoRuntimesRepo).withProfiles(['run-code-coverage']))
                }
            }
        }
        stage('Analyze') {
            steps {
                script {
                    helper.runSonarcloudAnalysis(getMavenCommand(kogitoRuntimesRepo))
                }
            }
        }
    }
    post {
        unsuccessful {
            emailext body: 'Kogito Runtimes daily Sonar #${BUILD_NUMBER} was: ' + "${currentBuild.currentResult}" +  '\n' +
                            'Please look here: ${BUILD_URL} ',
                     subject: "[${params.BUILD_BRANCH_NAME}][d] Runtimes Sonar",
                     to: env.KOGITO_CI_EMAIL_TO
        }
        cleanup {
            script {
                util.cleanNode('docker')
            }
        }
    }
}

MavenCommand getMavenCommand() {
    return helper.getMavenCommand(kogitoRuntimesRepo)
}
